using System;
using System.Collections;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.TestTools;
using NUnit.Framework;
using JackFrame;

namespace ActSample.Client.Tests {

    public class UIManagerOpenTest {

        [UnityTest]
        public IEnumerator TestLoadAndOpen() {

            bool isPassed = false;

            TestApp.SetUp();

            // FAKE HIERARCHY
            Canvas canvasRoot = new GameObject("UI_CANVAS").AddComponent<Canvas>();
            Image bg = new GameObject("BG").AddComponent<Image>();
            GameObject pageRoot = new GameObject("PAGE_ROOT");
            GameObject windowRoot = new GameObject("WINDOW_ROOT");
            GameObject worldTipsRoot = new GameObject("WORLD_TIPS_ROOT");
            GameObject uiTipsRoot = new GameObject("UI_TIPS_ROOT");
            bg.transform.SetParent(canvasRoot.transform);
            pageRoot.transform.SetParent(canvasRoot.transform);
            windowRoot.transform.SetParent(canvasRoot.transform);
            worldTipsRoot.transform.SetParent(canvasRoot.transform);
            uiTipsRoot.transform.SetParent(canvasRoot.transform);

            UIEntry entryController = new UIEntry();
            entryController.Inject();

            Action action = async () => {

                await entryController.InitAssets();

                var ui = UIManager.Instance;
                
                foreach (UIPageID id in Enum.GetValues(typeof(UIPageID))) {
                    FrameUIPanelBase panel = ui.OpenPage<FrameUIPanelBase>(id);
                    Assert.NotNull(panel);
                }

                foreach (UIWindowID id in Enum.GetValues(typeof(UIWindowID))) {
                    FrameUIPanelBase panel = ui.OpenWindow<FrameUIPanelBase>(id);
                    Assert.NotNull(panel);
                }

                foreach (UIWorldTipsID id in Enum.GetValues(typeof(UIWorldTipsID))) {
                    FrameUIPanelBase panel = ui.OpenWorldTips<FrameUIPanelBase>(id);
                    Assert.NotNull(panel);
                }

                foreach (UIUITipsID id in Enum.GetValues(typeof(UIUITipsID))) {
                    FrameUIPanelBase panel = ui.OpenUITips<FrameUIPanelBase>(id);
                    Assert.NotNull(panel);
                }

                isPassed = true;

            };

            action.Invoke();

            while(!isPassed) {
                yield return TestApp.tick;
                TestApp.Timeout();
            }

        }

    }

}